#scalar Timestamp
scalar Long
scalar Date
scalar BigDecimal

enum AccountType {
  Credit
  Debit
  Undefined
}

enum TransactionState {
  Cleared
  Outstanding
  Future
  Undefined
}

enum ImageFormatType {
  Jpeg
  Png
  Undefined
}

enum ReoccurringType {
  Monthly
  Annually
  BiAnnually
  FortNightly
  Quarterly
  Onetime
  Undefined
}

type Query {
  descriptions: [Description]
  description(descriptionName: String!): Description
  categories: [Category]
  account(accountNameOwner: String!): Account
  #    accounts(accountType: AccountType) : [Account]
  accounts: [Account]
  transactions(accountNameOwner: String!): [Transaction]
  #mutation: Mutation
}

type Mutation {
  createDescription(description: String): Description
  createCategory(category: String): Category
  createPayment(payment: PaymentInput): Payment
}

# complete 7/17/2021
type Account {
  accountId: Long
  activeStatus: Boolean!
  accountNameOwner: String!
  accountType: AccountType!
  moniker: String
  outstanding: BigDecimal
  cleared: BigDecimal
  future: BigDecimal
  #dateClosed: Date
}

# complete 7/17/2021
type Category {
  categoryId: Long
  activeStatus: Boolean!
  category: String!
  #    dateAdded: Timestamp
  #    dateUpdated: Timestamp
}

# complete 7/17/2021
type Description {
  descriptionId: Long
  activeStatus: Boolean!
  description: String!
  #    dateAdded: Timestamp
  #    dateUpdated: Timestamp
}

# complete 7/17/2021
type Transaction {
  transactionId: Long
  guid: String!
  accountId: Long
  accountType: AccountType!
  activeStatus: Boolean!
  transactionDate: Date!
  accountNameOwner: String!
  description: String!
  category: String!
  amount: BigDecimal!
  transactionState: TransactionState!
  reoccurringType: ReoccurringType!
  notes: String!
  #    dateAdded: Timestamp
  #    dateUpdated: Timestamp
}

# complete 7/17/2021
type Payment {
  paymentId: Long
  accountNameOwner: String!
  activeStatus: Boolean!
  transactionDate: Date!
  amount: BigDecimal!
  guidSource: String
  guidDestination: String
  #    dateAdded: Timestamp
  #    dateUpdated: Timestamp
}

input PaymentInput {
  paymentId: Long
  accountNameOwner: String!
  activeStatus: Boolean!
  #    transactionDate: Date!
  amount: BigDecimal!
}

# complete 7/17/2021
type Parameter {
  parameterId: Long
  parameterName: String!
  parameterValue: String!
  activeStatus: Boolean!
}

# complete 7/17/2021
type ValidationAmount {
  validationAmountId: Long
  accountId: Long
  #validationDate: Timestamp
  activeStatus: Boolean!
  transactionState: TransactionState
  amount: BigDecimal!
}
